class Solution {
    val seed = listOf(
        "0",
        "011",
        "0111001",
        "011100110110001",
        "0111001101100011011100100110001",
        "011100110110001101110010011000110111001101100010011100100110001",
        "0111001101100011011100100110001101110011011000100111001001100011011100110110001101110010011000100111001101100010011100100110001",
        "011100110110001101110010011000110111001101100010011100100110001101110011011000110111001001100010011100110110001001110010011000110111001101100011011100100110001101110011011000100111001001100010011100110110001101110010011000100111001101100010011100100110001",

    )

    fun findKthBit(n: Int, k: Int): Char {
        return getS(n).get(k - 1)
    }

    fun getS(i: Int): String {
        return when {
            i in seed.indices -> seed[i - 1]
            else -> {
                var s = seed.last()
                for (j in seed.lastIndex..i) {
                    s = s + "1" + inv(s).reversed()
                }
                s
            }
        }
    }

    fun inv(s: String): String {
        return s.map {
            when (it) {
                '0' -> '1'
                '1' -> '0'
                else -> it
            }
        }
        .joinToString("")
    }
}